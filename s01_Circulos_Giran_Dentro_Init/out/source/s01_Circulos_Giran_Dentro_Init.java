/* autogenerated by Processing revision 1286 on 2022-09-09 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.Random;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class s01_Circulos_Giran_Dentro_Init extends PApplet {



Circulos cir;
CirculosConcent miListaCirculos;
int NUM_CIRCULOS_INTERIORES=1;

 public void setup() {
    frameRate(30);
    /* size commented out by preprocessor */;
    background(0);
    stroke(250);
    cir=new Circulos(width/2, height/2, 100);
    miListaCirculos=new CirculosConcent(cir,NUM_CIRCULOS_INTERIORES);
}

 public void draw() {
    // cir.display();
    // background(0);
    // noLoop();
    miListaCirculos.display();
    //delay(100);
}
public class Circulos {

    int diametro=0, radio=0;
    int posX=0, posY=0;
    float angulo=0;
    String nom;

 public Circulos (int x, int y, int d) {
        posX=x;
        posY=y;
        radio=d;
        diametro=d*2;
        
    }

    public Circulos (int x, int y, int d,String nombre) {
        posX=x;
        posY=y;
        radio=d;
        diametro=d*2;
        nom=nombre;
    }

    public Circulos (int x, int y, int d, float an) {
        posX=x;
        posY=y;
        radio=d;
        diametro=d*2;    
        angulo=an;   
    }

     public void display(){
        pushMatrix();
        translate(posX, posY);
        noFill();
        ellipseMode(CENTER);
        ellipse(0, 0, diametro, diametro);
        popMatrix();
    }

}
public class CirculosConcent{

    Random generator;
    ArrayList<Circulos> listaCirculos = new ArrayList<Circulos>();
    
    int des=0;
    float angulo=0;
    Circulos origen;
    float INCREMENTO_AN=0.01f;

    public CirculosConcent(Circulos c){
        origen=c;
        int diametroNuevo=c.radio/2;
        // println("radioNuevo:"+diametroNuevo,"desplazamiento"+des);
        
        Circulos c1=new Circulos(0,0,diametroNuevo);
        calculaCentro(c1,0);
        
        listaCirculos.add(c1);
    }


public CirculosConcent(Circulos c, int numCir){
        origen=c;
        
        // println("radioNuevo:"+diametroNuevo,"desplazamiento"+des);
        
        for (int i = 0; i < numCir; ++i) {
            int diametroNuevo=(int)((c.radio/2)*constrain(random(0,1), 0.3f, 1));
            Circulos c1=new Circulos(0,0,diametroNuevo,"A"+i);
            calculaCentro(c1,0);
            listaCirculos.add(c1);
        }
        
    }


     public void display(){
        background(0);
        pushMatrix();
        noFill();
        ellipseMode(CENTER);
        translate(origen.posX, origen.posY);
        ellipse(0,0,origen.diametro,origen.diametro);
        for (Circulos o : listaCirculos) { 
            rotate(o.angulo);
            ellipse(o.posX, o.posY, o.diametro, o.diametro);
            o.angulo+=INCREMENTO_AN;
            println(o.nom,o.angulo);
        }
        popMatrix();
        
    }



     public void calculaCentro(Circulos c, int angulo){
        int puntoXext=0;
        int puntoYext=0;

        puntoXext=(int)(0+origen.radio*cos(radians(angulo)));
        // puntoYext=(int)(0+origen.radio*sin(radians(angulo)));

        println(puntoXext,puntoYext);
        c.posX=puntoXext-c.radio;
        c.posY=puntoYext;
        c.angulo=radians(random(0, 360));
    }
}


  public void settings() { size(800, 800); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "s01_Circulos_Giran_Dentro_Init" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
